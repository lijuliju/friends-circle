<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.friends.dao.ReplyCommentMapper">

    <sql id="Base_Column_List">
        rc.id,
		rc.dyna_id as dynaId,
		rc.user_id as userId,
		rc.content,
		rc.com_id as comId,
		rc.addtime,
		rc.like_count as likeCount,
		rc.reply_pid as replyPid,
		rc.picture
    </sql>

    <sql id="userOrganizationJoins">
    </sql>

    <select id="findReplyCommentList" resultType="com.friends.entity.DynamicComment">
        select
        <include refid="Base_Column_List"/>
		
        from fc_reply_comment rc
       <where>
       	rc.del_flag = 0
       	<if test="dynaId!=null">
       		and rc.dyna_id = #{dynaId}
       	</if>
       	<if test="comId !=null">
       		and rc.com_id = #{comId}
       	</if>
       </where>
       order by rc.addtime desc
    </select>
    
    <select id="findReplyCommentById" resultType="com.friends.entity.DynamicComment">
        select
        <include refid="Base_Column_List"/>
        from fc_reply_comment rc
       <where>
       	rc.del_flag = 0
       	and rc.id=#{id}
       	</where>
    </select>
    
    <insert id="insert">
        insert into fc_reply_comment (
	       id,
			dyna_id,
			user_id,
			content,
			addtime,
			del_flag,
			picture,
			reply_pid,
			com_id
        )value(
            #{id},
            #{dynaId},
            #{userId},
            #{content},
            #{addtime},
            #{delFlag},
            #{picture},
            #{replyPid},
            #{comId}
        )
    </insert>

    <update id="deleteReplyById">
    	update fc_reply_comment
        set del_flag = ${delFlag},del_time=${delTime}
        <where>
            id = #{id}
        </where>
    </update>
	<update id="updateLikeCountById">
        update fc_reply_comment
        set like_count = ${likeCount}
        <where>
            id = #{id}
        </where>
    </update>

</mapper>
